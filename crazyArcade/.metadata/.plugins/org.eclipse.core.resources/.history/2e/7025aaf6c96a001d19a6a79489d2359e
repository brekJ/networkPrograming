package client;



import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import java.awt.Color;
import java.awt.SystemColor;

class DBConnection {
	
	public static Connection getConnection() {
		Connection conn = null;
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String id = "ca";
		String pw = "1234";
		String driver = "oracle.jdbc.driver.OracleDriver";
		
		try {
			Class.forName(driver);
			conn = DriverManager.getConnection(url,id,pw);
			System.out.println("DB���� �Ϸ�");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("DB���� ����");
		}
		return conn;
	}
}

class Member {
	private String username;
	private String password;
	private String name;
	
	public Member() {
		// TODO Auto-generated constructor stub
	}
	
	public Member(String username, String password, String name) {
		super();
		this.username = username;
		this.password = password;
		this.name = name;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	class MemberDao {
		private MemberDao() {
			
		}
		private static MemberDao instance = new MemberDao();
		public static MemberDao getInstance() {
			return instance;
		}
		
		private Connection conn; // DB ���� ��ü
		private PreparedStatement pstmt;// Query �ۼ� ��ü
		private ResultSet rs; //Query ��� �������� ù��° Ŀ��
		
		//ȸ������ �޼ҵ�
		//���� 1,���� -1
		public int save(Member member) {
			//1.DB����
			conn = DBConnection.getConnection();
			
			//����� �Ͼ�� ������ try-catch
			try {
				//2. Query �ۼ�
				pstmt = conn.prepareStatement("insert into member values(?,?,?)");
				//3. Query �ϼ�
				pstmt.setString(1, member.getUsername());
				pstmt.setString(2, member.getPassword());
				pstmt.setString(3, member.getName());
				//4. Query ����
				// (1)select -> ResultSet rs = pstmt.executeQuery();
				// (2)insert, update, delete = pstmt.executeUpdate();
				pstmt.executeUpdate();
				return 1;
			} catch (Exception e) {
				e.printStackTrace();
			}
			return -1;
		}
		
		public int findByUsernameAndPassword(String username, String password) {
			//1.DB����
			conn = DBConnection.getConnection();
			try {
				//2.Query �ۼ�
				pstmt = conn.prepareStatement("select username from member where username = ? and password = ?");
				//3.Query �ϼ�
				pstmt.setString(1, username);
				pstmt.setString(2, password);
				//4.Query ����
				rs=pstmt.executeQuery();
				if(rs.next()) {
					return 1;
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return -1;
		}
		
		//ȸ������ ����
		public Vector<Member> findByAll(){
			//0. �÷��� ����
			Vector<Member> members = new Vector<Member>();
			
			//1. DB����
			conn = DBConnection.getConnection();
			try {
				//2.Query �ۼ�
				pstmt = conn.prepareStatement("select * from member");
				//3.Query �ϼ�
						
				//4.Query ����
				rs=pstmt.executeQuery();
				//5.����� ����
				while(rs.next()) {
					Member member = new Member();
					member.setUsername(rs.getString("username"));
					member.setPassword(rs.getString("password"));
					member.setName(rs.getString("name"));
					
					members.add(member);
					
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			return members;
		}
	}

	
	
}
public class client extends JFrame {

	private JPanel contentPane;
	private JLabel lblJoin;
	private JButton joinCompleteBtn;
	private JTextField tfUsername;
	private JTextField tfPassword;
	private JTextField tfName;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					client frame = new client();
					
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public client() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(576, 396);
		setLocationRelativeTo(null);
		contentPane = new JPanel();
		contentPane.setBackground(Color.CYAN);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		lblJoin = new JLabel("\uD06C\uC544 \uAC8C\uC784\uC544\uC774\uB514 \uB9CC\uB4E4\uAE30");
		Font f1 = new Font("����", Font.BOLD, 20); //�ü� ���� ����
		lblJoin.setFont(f1); 
		lblJoin.setBounds(28, 27, 280, 35);
		contentPane.add(lblJoin);
		
		JLabel lblUsername = new JLabel("\uBE44\uBC00\uBC88\uD638");
		lblUsername.setBackground(Color.BLUE);
		lblUsername.setBounds(17, 159, 121, 28);
		contentPane.add(lblUsername);
		
		JLabel label = new JLabel("\uAC8C\uC784\uC544\uC774\uB514");
		label.setBackground(Color.BLUE);
		label.setBounds(17, 113, 121, 20);
		contentPane.add(label);
		
		JLabel lblName = new JLabel("\uC774\uB984");
		lblName.setBounds(17, 210, 121, 20);
		contentPane.add(lblName);

		tfUsername = new JTextField();
		tfUsername.setColumns(10);
		tfUsername.setBounds(159, 106, 186, 35);
		contentPane.add(tfUsername);
		
		tfPassword = new JTextField();
		tfPassword.setColumns(10);
		tfPassword.setBounds(159, 156, 186, 35);
		contentPane.add(tfPassword);
		
		tfName = new JTextField();
		tfName.setColumns(10);
		tfName.setBounds(159, 203, 186, 35);
		contentPane.add(tfName);
		
		
		joinCompleteBtn = new JButton("ȸ�����ԿϷ�");
		joinCompleteBtn.setBounds(206, 363, 139, 29);
		contentPane.add(joinCompleteBtn);
		
		JButton joinCompleteBtn = new JButton("\uD655\uC778");
		joinCompleteBtn.setForeground(Color.WHITE);
		joinCompleteBtn.setBackground(Color.BLUE);
		joinCompleteBtn.setBounds(28, 275, 125, 29);
		contentPane.add(joinCompleteBtn);
		
		JButton canclebtn = new JButton("\uCDE8\uC18C");
		canclebtn.setForeground(Color.WHITE);
		canclebtn.setBackground(Color.BLUE);
		canclebtn.setBounds(202, 275, 125, 29);
		contentPane.add(canclebtn);
		
		setVisible(true);
		//ȸ�����ԿϷ� �׼�
		joinCompleteBtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				//ȸ������ ����(DB�� insert)
				Member member = new Member();
				member.setUsername(tfUsername.getText());
				member.setPassword(tfPassword.getText());
				member.setName(tfName.getText());
				
				MemberDao dao = MemberDao.getInstance();
				int result = dao.save(member);
				
				if(result==1) {
					JOptionPane.showMessageDialog(null, "ȸ�������� �Ϸ�Ǿ����ϴ�."); //�˸�â
					dispose();//�� â ���°�				
				}
				else {
					JOptionPane.showMessageDialog(null, "ȸ�������� �����Ͽ����ϴ�."); //�˸�â
				}
			}
		});
		
		
		canclebtn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				dispose();
			}
		});

	}
}